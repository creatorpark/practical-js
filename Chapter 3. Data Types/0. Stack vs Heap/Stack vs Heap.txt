javascript에서 stack과 heap 메모리에 각각 할당되는 타입을 설명해줘.

스택 메모리는 고정된 크기의 데이터를 저장하는 데 사용됩니다. 주로 함수 호출, 기본 데이터 타입(원시 타입) 및 참조(Reference) 값을 저장합니다. 스택은 LIFO(Last In, First Out) 구조를 가지며, 매우 빠른 속도로 접근할 수 있습니다.

1. 스택에 저장되는 데이터 타입

A. 원시 타입 (Primitive Types)
- number
- string
- boolean
- undefined
- null
- symbol
- bigint

B. 함수 호출의 컨텍스트
- 함수 호출 시 생성되는 실행 컨텍스트
- 함수의 매개변수
- 지역 변수

function foo() {
    let a = 10;
    let b = 20;
    return a + b;
}

// foo 함수는 힙에 저장된 함수 객체를 가리키는 참조를 가짐
console.log(foo()); // 30


[질문] a = 10, b = 20;
이라고 했을 때 a,b 도 메모리를 차지하고
10, 20 값도 메모리를 차지해?
64bit의 경우, 
변수 8, 8 
값 8,8 해서 32바이트

Stack에 저장되는 값
함수 참조(변수 foo)
지역 변수(a와 b)


---------------
힙 (Heap)
힙 메모리는 동적으로 할당되는 메모리 영역으로, 크기가 정해져 있지 않은 데이터나 복잡한 데이터 구조를 저장하는 데 사용됩니다. 주로 객체(Object)와 함수(Function)이 힙에 할당됩니다. 힙은 구조적으로 스택보다 느리지만, 더 많은 양의 데이터를 유연하게 저장할 수 있습니다.

힙에 저장되는 데이터 타입

객체 (Objects)
- 일반 객체
- 배열
- 함수 객체(코드와 클로저 정보 포함)
  예: function foo() { ... }의 함수 객체
- Date, RegExp 등 내장 객체

foo 변수는 함수 객체를 가리키는 참조입니다. 
이 참조는 스택에 저장되며, 힙에 있는 실제 함수 객체를 가리킵니다.

