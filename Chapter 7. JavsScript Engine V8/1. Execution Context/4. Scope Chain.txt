var a = 1;

function outer() {
    var b = 2;
    
    function inner() {
        var c = 3;
        console.log(a); // 1
        console.log(b); // 2
        console.log(c); // 3
    }
    
    inner();
}

outer();

위 예제에서:

전역 실행 컨텍스트가 생성되고, 전역 변수 a가 변수 객체에 추가됩니다.
outer 함수가 호출되면, 새로운 함수 실행 컨텍스트가 생성되고, outer 함수의 변수 b가 변수 객체에 추가됩니다.
inner 함수가 호출되면, 또 다른 함수 실행 컨텍스트가 생성되고, inner 함수의 변수 c가 변수 객체에 추가됩니다.
inner 함수 내부에서 a와 b에 접근할 수 있는 이유는 실행 컨텍스트의 스코프 체인 덕분입니다. inner 함수의 스코프 체인은 inner 함수의 스코프, outer 함수의 스코프, 그리고 전역 스코프로 구성됩니다.